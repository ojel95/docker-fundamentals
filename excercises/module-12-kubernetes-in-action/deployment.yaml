apiVersion: apps/v1
kind: Deployment
metadata: # Deployment object metadata
  name: second-app-deployment
  labels:
    group: example # Here the key and value are up to you. This can connect resources matching other object labels like the service.
spec: # This is the spec for the deployment object.
  replicas: 3
  selector: # This selects the pods to control
    matchLabels:
      app: second-app # This must match the pod labels in number and values.
      tier: backend
    # matchExpressions:
    #   - {key: app, operator: In, values: [second-app, first-app]}
  template: # Here i'm specifying a Pod object template.
    metadata: # Pod object metadata
      labels:
        app: second-app # Here the key and value are up to you. You can have multiple labels
        tier: backend
    spec: # Pod object specification
      containers:
        - name: second-node-app
          image: orjoeslo/first-k8s-app:2
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5

        # - name: ... # Since this is an array, you can add multiple containers to the Pod like this.
        #   image: ...
